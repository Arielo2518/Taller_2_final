"01_load_data.R",     # Para cargar los datos iniciales
"02_clean_data.R",    # Para limpiar y preparar los datos
"03_analysis.R",      # Para realizar los análisis principales
"04_visualizations.R" # Para crear gráficos y visualizaciones
)
for(script in script_names) {
file.path("R", script) %>%
file.create()
}
# Crear el contenido del script principal que configura el proyecto
load_data_content <- '# Configuración inicial del proyecto
if (!require("renv")) install.packages("renv")
renv::init()
# Instalar y cargar paquetes necesarios
packages <- c(
"tidyverse",  # Para manipulación de datos
"readxl",     # Para leer archivos Excel
"sf",         # Para datos geográficos
"here",       # Para manejo de rutas
"DiagrammeR", # Para diagramas ER
"usethis"     # Para configuración de Git
)
# Instalar paquetes faltantes
new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
# Cargar paquetes
lapply(packages, library, character.only = TRUE)
# Configurar Git
usethis::use_git()
'
writeLines(load_data_content, file.path("R", "01_load_data.R"))
# Crear .gitignore - Este archivo evita que se suban archivos innecesarios a GitHub
gitignore_content <- ".Rproj.user
.Rhistory
.RData
.Ruserdata
*.Rproj"
writeLines(gitignore_content, ".gitignore")
metropolitana_2021_1 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/Servel/metropolitana_2021_primeravuelta.xlsx")
datos_comunas1_2021 <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
datos_comunas1_2021_agrupado <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
eleccion_2021_primeravuelta <- datos_comunas1_2021_agrupado %>%
rename(comuna = Comuna) %>%
mutate(comuna = str_to_lower(comuna))
eleccion_2021_primeravuelta
metropolitana_2021_2 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/Servel/metropolitana_2021_segundavuelta.xlsx")
datos_comunas2_2021 <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
datos_comunas2_2021_agrupado <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
eleccion_2021_segundavuelta <- datos_comunas2_2021_agrupado %>%
rename(comuna = Comuna) %>%
mutate(comuna = str_to_lower(comuna))
eleccion_2021_segundavuelta
remove(datos_comunas1_2021, datos_comunas2_2021, datos_comunas1_2021_agrupado, datos_comunas2_2021_agrupadometropolitana_2021_1, metropolitana_2021_2, datos_comunas1_2021, datos_comunas2_2021)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_primeravuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_primeravuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 1era Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_primeravuelta
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_segundavuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_segundavuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_segundavuelta
# Gráfico 2021
grafico_combinado_2021 <- plot_grid(
participacion_2021_primeravuelta + theme(legend.position = "none"),
participacion_2021_segundavuelta + theme(legend.position = "none"),
align = "v",
ncol = 2
)
# Extraer la leyenda de uno de los gráficos
leyenda <- get_legend(participacion_2021_primeravuelta)
# Combinar gráficos y leyenda
plot_grid(grafico_combinado_2021, leyenda, ncol = 1, rel_heights = c(0.81, 0.5))
comuna_codes_rm <- c(
"13101" = "SANTIAGO",
"13102" = "CERRILLOS",
"13103" = "CERRO NAVIA",
"13104" = "CONCHALI",
"13105" = "EL BOSQUE",
"13106" = "ESTACION CENTRAL",
"13107" = "HUECHURABA",
"13108" = "INDEPENDENCIA",
"13109" = "LA CISTERNA",
"13110" = "LA FLORIDA",
"13111" = "LA GRANJA",
"13112" = "LA PINTANA",
"13113" = "LA REINA",
"13114" = "LAS CONDES",
"13115" = "LO BARNECHEA",
"13116" = "LO ESPEJO",
"13117" = "LO PRADO",
"13118" = "MACUL",
"13119" = "MAIPU",
"13120" = "NUNOA",
"13121" = "PEDRO AGUIRRE CERDA",
"13122" = "PENALOLEN",
"13123" = "PROVIDENCIA",
"13124" = "PUDAHUEL",
"13125" = "QUILICURA",
"13126" = "QUINTA NORMAL",
"13127" = "RECOLETA",
"13128" = "RENCA",
"13129" = "SAN JOAQUIN",
"13130" = "SAN MIGUEL",
"13131" = "SAN RAMON",
"13132" = "VITACURA",
"13201" = "PUENTE ALTO",
"13202" = "PIRQUE",
"13203" = "SAN JOSE DE MAIPO",
"13301" = "COLINA",
"13302" = "LAMPA",
"13303" = "TILTIL",
"13401" = "SAN BERNARDO",
"13402" = "BUIN",
"13403" = "CALERA DE TANGO",
"13404" = "PAINE",
"13501" = "MELIPILLA",
"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
comuna_codes_rm <- comuna_codes_rm %>%
mutate(nombre_comuna = str_to_lower(nombre_comuna))
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
remove(casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
promedio_dau_comuna <- casen_2021_rm_actualizada %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>% # Ñ por N en primera vuelta
mutate(comuna = str_replace_all(comuna, "Ñ", "N"))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>% # Ñ por N en primera vuelta
mutate(comuna = str_replace_all(comuna, "Ñ", "N"))
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
eleccion_2021_primeravuelta
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>% # Ñ por N en primera vuelta
mutate(comuna = str_replace_all(comuna, "Ñ", "N"))
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>% # Ñ por N en primera vuelta
mutate(comuna = str_replace_all(comuna, "Ñ", "N"))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>% # Ñ por N en primera vuelta
mutate(comuna = str_replace_all(comuna, "Ñ", "N"))
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
View(eleccion_2021_primeravuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "Ñ", "N")))
View(eleccion_2021_segundavuelta)
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
atos_cruzados_segundavuelta
datos_cruzados_segundavuelta
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio %>% )#Las bases se unieron mediante folio e id persona
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada <- casen_2021_rm %>%
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
View(casen_2021_rm_actualizada)
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
comuna_codes_rm <- c(
"13101" = "SANTIAGO",
"13102" = "CERRILLOS",
"13103" = "CERRO NAVIA",
"13104" = "CONCHALI",
"13105" = "EL BOSQUE",
"13106" = "ESTACION CENTRAL",
"13107" = "HUECHURABA",
"13108" = "INDEPENDENCIA",
"13109" = "LA CISTERNA",
"13110" = "LA FLORIDA",
"13111" = "LA GRANJA",
"13112" = "LA PINTANA",
"13113" = "LA REINA",
"13114" = "LAS CONDES",
"13115" = "LO BARNECHEA",
"13116" = "LO ESPEJO",
"13117" = "LO PRADO",
"13118" = "MACUL",
"13119" = "MAIPU",
"13120" = "NUNOA",
"13121" = "PEDRO AGUIRRE CERDA",
"13122" = "PENALOLEN",
"13123" = "PROVIDENCIA",
"13124" = "PUDAHUEL",
"13125" = "QUILICURA",
"13126" = "QUINTA NORMAL",
"13127" = "RECOLETA",
"13128" = "RENCA",
"13129" = "SAN JOAQUIN",
"13130" = "SAN MIGUEL",
"13131" = "SAN RAMON",
"13132" = "VITACURA",
"13201" = "PUENTE ALTO",
"13202" = "PIRQUE",
"13203" = "SAN JOSE DE MAIPO",
"13301" = "COLINA",
"13302" = "LAMPA",
"13303" = "TILTIL",
"13401" = "SAN BERNARDO",
"13402" = "BUIN",
"13403" = "CALERA DE TANGO",
"13404" = "PAINE",
"13501" = "MELIPILLA",
"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
comuna_codes_rm <- comuna_codes_rm %>%
mutate(nombre_comuna = str_to_lower(nombre_comuna))
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
remove(casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Reemplazamos Ñ por n para cruce con CASEN
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>%  # Agrupar por folio
slice_head(n = 1) %>% # Seleccionar solo la primera persona de cada folio
mutate_all(~ifelse(. %in% c(-88, -99, 97, 98, 99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>%  # Agrupar por folio
slice_head(n = 1) %>% # Seleccionar solo la primera persona de cada folio
mutate_all(~ifelse(. %in% c(-88, -99, 97, 98, 99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
comuna_codes_rm <- c(
"13101" = "SANTIAGO",
"13102" = "CERRILLOS",
"13103" = "CERRO NAVIA",
"13104" = "CONCHALI",
"13105" = "EL BOSQUE",
"13106" = "ESTACION CENTRAL",
"13107" = "HUECHURABA",
"13108" = "INDEPENDENCIA",
"13109" = "LA CISTERNA",
"13110" = "LA FLORIDA",
"13111" = "LA GRANJA",
"13112" = "LA PINTANA",
"13113" = "LA REINA",
"13114" = "LAS CONDES",
"13115" = "LO BARNECHEA",
"13116" = "LO ESPEJO",
"13117" = "LO PRADO",
"13118" = "MACUL",
"13119" = "MAIPU",
"13120" = "NUNOA",
"13121" = "PEDRO AGUIRRE CERDA",
"13122" = "PENALOLEN",
"13123" = "PROVIDENCIA",
"13124" = "PUDAHUEL",
"13125" = "QUILICURA",
"13126" = "QUINTA NORMAL",
"13127" = "RECOLETA",
"13128" = "RENCA",
"13129" = "SAN JOAQUIN",
"13130" = "SAN MIGUEL",
"13131" = "SAN RAMON",
"13132" = "VITACURA",
"13201" = "PUENTE ALTO",
"13202" = "PIRQUE",
"13203" = "SAN JOSE DE MAIPO",
"13301" = "COLINA",
"13302" = "LAMPA",
"13303" = "TILTIL",
"13401" = "SAN BERNARDO",
"13402" = "BUIN",
"13403" = "CALERA DE TANGO",
"13404" = "PAINE",
"13501" = "MELIPILLA",
"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
comuna_codes_rm <- comuna_codes_rm %>%
mutate(nombre_comuna = str_to_lower(nombre_comuna))
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Reemplazamos Ñ por n para cruce con CASEN
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>% #Las bases se unieron mediante folio e id persona
group_by(folio) %>%
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
remove(casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
