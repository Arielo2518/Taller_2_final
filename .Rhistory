"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
comuna_codes_rm <- comuna_codes_rm %>%
mutate(nombre_comuna = str_to_lower(nombre_comuna))
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>% #Las bases se unieron mediante folio e id persona
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
remove(casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Reemplazamos Ñ por n para cruce con CASEN
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>%  # Agrupar por folio
slice_head(n = 1) %>% # Seleccionar solo la primera persona de cada folio
mutate_all(~ifelse(. %in% c(-88, -99, 97, 98, 99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- import("https://github.com/Arielo2518/Taller_2_final/raw/main/data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>%
group_by(folio) %>%  # Agrupar por folio
slice_head(n = 1) %>% # Seleccionar solo la primera persona de cada folio
mutate_all(~ifelse(. %in% c(-88, -99, 97, 98, 99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
comuna_codes_rm <- c(
"13101" = "SANTIAGO",
"13102" = "CERRILLOS",
"13103" = "CERRO NAVIA",
"13104" = "CONCHALI",
"13105" = "EL BOSQUE",
"13106" = "ESTACION CENTRAL",
"13107" = "HUECHURABA",
"13108" = "INDEPENDENCIA",
"13109" = "LA CISTERNA",
"13110" = "LA FLORIDA",
"13111" = "LA GRANJA",
"13112" = "LA PINTANA",
"13113" = "LA REINA",
"13114" = "LAS CONDES",
"13115" = "LO BARNECHEA",
"13116" = "LO ESPEJO",
"13117" = "LO PRADO",
"13118" = "MACUL",
"13119" = "MAIPU",
"13120" = "NUNOA",
"13121" = "PEDRO AGUIRRE CERDA",
"13122" = "PENALOLEN",
"13123" = "PROVIDENCIA",
"13124" = "PUDAHUEL",
"13125" = "QUILICURA",
"13126" = "QUINTA NORMAL",
"13127" = "RECOLETA",
"13128" = "RENCA",
"13129" = "SAN JOAQUIN",
"13130" = "SAN MIGUEL",
"13131" = "SAN RAMON",
"13132" = "VITACURA",
"13201" = "PUENTE ALTO",
"13202" = "PIRQUE",
"13203" = "SAN JOSE DE MAIPO",
"13301" = "COLINA",
"13302" = "LAMPA",
"13303" = "TILTIL",
"13401" = "SAN BERNARDO",
"13402" = "BUIN",
"13403" = "CALERA DE TANGO",
"13404" = "PAINE",
"13501" = "MELIPILLA",
"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
comuna_codes_rm <- comuna_codes_rm %>%
mutate(nombre_comuna = str_to_lower(nombre_comuna))
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Reemplazamos Ñ por n para cruce con CASEN
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(across(everything(), ~str_replace_all(., "ñ", "n")))
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = c("folio", "id_persona")) %>% #Las bases se unieron mediante folio e id persona
group_by(folio) %>%
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) # Eliminamos valores faltantes
casen_2021_rm_actualizada
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021 <- casen_2021_rm_actualizada %>%
left_join(comuna_codes_rm, by = "comuna") %>%
mutate(comuna = nombre_comuna) %>%
select(-nombre_comuna)
remove(casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
promedio_dau_comuna <- casen_2021 %>%
group_by(comuna) %>%                    # Agrupar por comuna
summarise(promedio_dau = mean(dau, na.rm = TRUE))  # Calcular promedio de 'dau' ignorando NA
# Ver el resultado
promedio_dau_comuna
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# 4. Crear el gráfico de mapa
promedio_dau_2021 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +  # Usar el promedio de 'dau'
scale_fill_gradientn(colours = rev(paleta), name = "Promedio DAU") +  # Escala de colores
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13)
if(!require(readxl)){install.packages("readxl")}; library(readxl)
if(!require(dplyr)){install.packages("dplyr")}; library(dplyr)
if(!require(chilemapas)){install.packages("chilemapas")}; library(chilemapas)
if(!require(ggplot2)){install.packages("ggplot2")}; library(ggplot2)
if(!require(stringr)){install.packages("stringr")}; library(stringr)
if(!require(stringi)){install.packages("stringi")}; library(stringi)
if(!require(tools)){install.packages("tools")}; library(tools)
if(!require(gridExtra)){install.packages("gridExtra")}; library(gridExtra)
if(!require(cowplot)){install.packages("cowplot")}; library(cowplot)
if(!require(rio)){install.packages("rio")}; library(rio)
if(!require(tidyr)){install.packages("tidyr")}; library(tidyr)
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# 4. Crear el gráfico de mapa
promedio_dau_2021 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +  # Usar el promedio de 'dau'
scale_fill_gradientn(colours = rev(paleta), name = "Promedio DAU") +  # Escala de colores
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13)
# 5. Mostrar el gráfico
promedio_dau_2021
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(dau)) %>%  # Filtrar solo los valores no faltantes
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(dau, na.rm = TRUE))  # Calcular el promedio
View(promedio_dau_comuna)
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(dau)) %>%  # Filtrar solo los valores no faltantes
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Calcular el promedio
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(dau)) %>%  # Filtrar solo los valores no faltantes
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Calcular el promedio
View(datos_cruzados_primeravuelta)
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
datos_cruzados_primeravuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_segundavuelta
datos_cruzados_primeravuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio ") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
datos_cruzados_primeravuelta
datos_cruzados_primeravuelta
datos_cruzados_primeravuelta
# Realizar el cruce de bases por 'comuna'
datos_cruzados_primeravuelta <- eleccion_2021_primeravuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_segundavuelta <- eleccion_2021_segundavuelta %>%
left_join(promedio_dau_comuna, by = "comuna")
datos_cruzados_primeravuelta
datos_cruzados_segundavuelta
datos_cruzados_primeravuelta
mapa1 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio ") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
mapa1
mapa1 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio ") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
mapa1
datos_cruzados_primeravuelta <- datos_cruzados_primeravuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = sum(promedio_dau, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))
datos_cruzados_primeravuelta <- datos_cruzados_primeravuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = sum(promedio_dau, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
promedio_dau_comuna <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
promedio_dau_comuna
# Asegúrate de que 'promedio_dau' sea un número y calcula el promedio por comuna
datos_cruzados_primeravuelta <- datos_cruzados_primeravuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
# Filtrar y calcular el promedio de 'promedio_dau' por comuna
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Cambié la suma por el promedio
# Preparar el mapa de comunas en Santiago
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(promedio_dau_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))  # Unir el promedio por comuna
# Definir una paleta de colores
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# Crear el gráfico con el promedio de 'dau' por comuna
promedio_dau_comuna_grafico <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio DAU") +  # Usar el promedio de DAU
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13)
# Mostrar el gráfico
promedio_dau_comuna_grafico
# Asegúrate de que 'promedio_dau' sea un número y calcula el promedio por comuna
datos_cruzados_primeravuelta <- datos_cruzados_primeravuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
# Filtrar y calcular el promedio de 'promedio_dau' por comuna
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Cambié la suma por el promedio
# Mapa desde el paquete Chile Mapas
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(promedio_dau_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))  # Unir el promedio por comuna
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# Gráfico 4
Gráfico_4 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio DAU") +  # Usar el promedio de DAU
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13)
promedio_dau_comuna_grafico
# Asegúrate de que 'promedio_dau' sea un número y calcula el promedio por comuna
datos_cruzados_primeravuelta <- datos_cruzados_primeravuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
# Filtrar y calcular el promedio de 'promedio_dau' por comuna
promedio_dau_comuna <- datos_cruzados_primeravuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Cambié la suma por el promedio
# Mapa desde el paquete Chile Mapas
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(promedio_dau_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))  # Unir el promedio por comuna
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# Gráfico 4
Gráfico_4 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio Decil por comuna") +  # Usar el promedio de DAU
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13)
promedio_dau_comuna_grafico
Gráfico_4 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio Decil por comuna") +  # Usar el promedio de DAU
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13) +
theme(
axis.title = element_blank(),  # Quitar los títulos de los ejes
axis.text = element_blank(),   # Quitar las marcas de los ejes
axis.ticks = element_blank(),  # Quitar las líneas de los ejes
plot.title = element_text(hjust = 0.5)  # Centrar el título
)
Gráfico_4
```{r}
# Asegúrate de que 'promedio_dau' sea un número y calcula el promedio por comuna
datos_cruzados_segundavuelta <- datos_cruzados_segundavuelta %>%
mutate(promedio_dau = as.numeric(promedio_dau))
# Filtrar y calcular el promedio de 'promedio_dau' por comuna
promedio_dau_comuna <- datos_cruzados_segundavuelta %>%
filter(!is.na(promedio_dau) & promedio_dau >= 0) %>%
group_by(comuna) %>%
summarise(promedio_dau_comuna = mean(promedio_dau, na.rm = TRUE))  # Cambié la suma por el promedio
# Mapa desde el paquete Chile Mapas
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(promedio_dau_comuna %>%
mutate(comuna = str_trim(tolower(comuna))), by = c("nombre_comuna" = "comuna"))  # Unir el promedio por comuna
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
# Gráfico 4
Gráfico_5 <- ggplot(comunas_santiago) +
geom_sf(aes(fill = promedio_dau_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Promedio Decil por comuna") +  # Usar el promedio de DAU
labs(title = "Promedio DAU por Comuna en 2021") +
theme_minimal(base_size = 13) +
theme(
axis.title = element_blank(),  # Quitar los títulos de los ejes
axis.text = element_blank(),   # Quitar las marcas de los ejes
axis.ticks = element_blank(),  # Quitar las líneas de los ejes
plot.title = element_text(hjust = 0.5)  # Centrar el título
)
Gráfico_5
# Gráfico 2021
grafico_combinado_casen2021 <- plot_grid(
Gráfico_4 + theme(legend.position = "none"),
Gráfico_5 + theme(legend.position = "none"),
align = "v",
ncol = 2
)
# Extraer la leyenda de uno de los gráficos
leyenda <- get_legend(Gráfico_4)
# Combinar gráficos y leyenda
plot_grid(grafico_combinado_casen2021, leyenda, ncol = 1, rel_heights = c(0.81, 0.5))
View(datos_cruzados_primeravuelta)
# Asegúrate de tener ambas variables, 'promedio_dau_comuna' y 'participacion_comuna', unidas
comunas_santiago <- comunas_santiago %>%
left_join(participacion_comuna, by = c("nombre_comuna" = "comuna"))
# Gráfico de dispersión
Gráfico_5 <- ggplot(comunas_santiago, aes(x = participacion_comuna, y = promedio_dau_comuna)) +
geom_point(aes(color = participacion_comuna), size = 3, alpha = 0.7) +  # Puntos con color según participación
scale_color_gradientn(colours = rev(paleta), name = "Participación Electoral") +  # Paleta de colores para la participación
labs(title = "Promedio DAU por Participación Electoral") +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title = element_text(size = 12),    # Tamaño de los títulos de los ejes
axis.text = element_text(size = 10)      # Tamaño de las etiquetas de los ejes
)
Gráfico_5
# Asegúrate de tener ambas variables, 'promedio_dau_comuna' y 'participacion_comuna', unidas
# Crear una variable de rango de participación para categorías
comunas_santiago <- comunas_santiago %>%
mutate(participacion_rango = cut(participacion_comuna,
breaks = c(0, 20, 40, 60, 80, 100),
labels = c("0-20%", "21-40%", "41-60%", "61-80%", "81-100%")))
# Gráfico de barras para mostrar el promedio de DAU por rango de participación
Gráfico_6 <- ggplot(comunas_santiago, aes(x = participacion_rango, y = promedio_dau_comuna, fill = participacion_rango)) +
geom_col(show.legend = FALSE) +  # Usamos 'geom_col()' para barras con altura específica
scale_fill_brewer(palette = "YlGnBu") +  # Usar una paleta de colores
labs(title = "Promedio DAU por Rango de Participación Electoral", x = "Rango de Participación", y = "Promedio DAU") +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5),  # Centrar el título
axis.title = element_text(size = 12),    # Tamaño de los títulos de los ejes
axis.text = element_text(size = 10)      # Tamaño de las etiquetas de los ejes
)
Gráfico_6
# Creamos una clasificación simplificada de nivel educacional
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(nivel_educacional = case_when(
# Sin educación formal o básica incompleta
e6a %in% c(1, 2, 3, 4, 5, 6) | is.na(e6a) ~ "Básica o menos",
# Educación básica completa y media (completa o incompleta)
e6a %in% c(7, 8, 9, 10) ~ "Media",
# Educación técnica (en cualquier nivel)
e6a %in% c(11, 12) ~ "Técnica",
# Educación universitaria o superior (incluye postgrados)
e6a %in% c(13, 14, 15) ~ "Universitaria",
# Por si hay algún caso no considerado
TRUE ~ "No especificado"
))
# Creamos una visualización que muestra la distribución por comuna
educacion_comuna <- casen_2021_rm_actualizada %>%
# Agrupamos por comuna y nivel educacional para contar
group_by(comuna, nivel_educacional) %>%
summarise(cantidad = n(), .groups = 'drop') %>%
# Calculamos el porcentaje dentro de cada comuna
group_by(comuna) %>%
mutate(porcentaje = (cantidad / sum(cantidad)) * 100) %>%
ungroup()
# Creamos un gráfico de barras apiladas por comuna
grafico_educacion <- ggplot(educacion_comuna,
aes(x = reorder(comuna, porcentaje),
y = porcentaje,
fill = nivel_educacional)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set2") +  # Usamos una paleta de colores agradable
labs(
title = "Nivel Educacional por Comuna",
subtitle = "Región Metropolitana - 2021",
x = "Comuna",
y = "Porcentaje",
fill = "Nivel Educacional"
) +
theme_minimal() +
theme(
axis.text.y = element_text(size = 8),
legend.position = "bottom"
)
# Mostramos el gráfico
grafico_educacion
# Creamos un resumen general de la distribución
resumen_educacional <- casen_2021_rm_actualizada %>%
group_by(nivel_educacional) %>%
summarise(
cantidad = n(),
porcentaje = round((cantidad / nrow(casen_2021_rm_actualizada)) * 100, 1)
) %>%
arrange(desc(porcentaje))
# Mostramos el resumen
print(resumen_educacional)
View(datos_cruzados_primeravuelta)
View(datos_cruzados_primeravuelta)
