mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
#  Datos limpios
eleccion_2021_segundavuelta <- datos_comunas2_2021_agrupado
# Limpieza
```{r}
# Pull a GITHUB
dir.create("data", showWarnings = FALSE) #DATA
dir.create("output", showWarnings = FALSE) # RESULTADOS
dir.create("R", showWarnings = FALSE) # SCRIPT
dir.create("docs", showWarnings = FALSE) # Documentos
readme_content <- "# Análisis CASEN/SERVEL 2013-2021
Análisis de la relación entre participación electoral y condiciones socioeconómicas en Chile.
## Estructura del Proyecto
- `data/`: Datos brutos de CASEN y SERVEL
- `output/`: Resultados y visualizaciones
- `R/`: Scripts de análisis
- `docs/`: Documentación adicional
## Equipo
- Ariel Álvarez
- Marcos González
- Arturo Zamorano"
writeLines(readme_content, "README.md")
# Crear los scripts principales de análisis
script_names <- c(
"01_load_data.R",     # Para cargar los datos iniciales
"02_clean_data.R",    # Para limpiar y preparar los datos
"03_analysis.R",      # Para realizar los análisis principales
"04_visualizations.R" # Para crear gráficos y visualizaciones
)
for(script in script_names) {
file.path("R", script) %>%
file.create()
}
# Crear el contenido del script principal que configura el proyecto
load_data_content <- '# Configuración inicial del proyecto
if (!require("renv")) install.packages("renv")
renv::init()
# Instalar y cargar paquetes necesarios
packages <- c(
"tidyverse",  # Para manipulación de datos
"readxl",     # Para leer archivos Excel
"sf",         # Para datos geográficos
"here",       # Para manejo de rutas
"DiagrammeR", # Para diagramas ER
"usethis"     # Para configuración de Git
)
# Instalar paquetes faltantes
new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
# Cargar paquetes
lapply(packages, library, character.only = TRUE)
# Configurar Git
usethis::use_git()
'
writeLines(load_data_content, file.path("R", "01_load_data.R"))
# Crear .gitignore - Este archivo evita que se suban archivos innecesarios a GitHub
gitignore_content <- ".Rproj.user
.Rhistory
.RData
.Ruserdata
*.Rproj"
writeLines(gitignore_content, ".gitignore")
# Paquetes necesarios para el informe
if(!require(haven)){install.packages("haven")}; library(haven)
if(!require(readxl)){install.packages("readxl")}; library(readxl)
if(!require(dplyr)){install.packages("dplyr")}; library(dplyr)
if(!require(chilemapas)){install.packages("chilemapas")}; library(chilemapas)
if(!require(ggplot2)){install.packages("ggplot2")}; library(ggplot2)
if(!require(stringr)){install.packages("stringr")}; library(stringr)
if(!require(stringi)){install.packages("stringi")}; library(stringi)
if(!require(tools)){install.packages("tools")}; library(tools)
if(!require(gridExtra)){install.packages("gridExtra")}; library(gridExtra)
# Carga y procesamiento de datos electorales
#############################################
############### Presidencial 2021 ###########
#############################################
# Carga datos de participación Presidencial 2021 primera vuelta
metropolitana_2021_1 <- read_excel("data/Servel/metropolitana_2021_primeravuelta.xlsx")
datos_comunas1_2021 <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
# Datos agrupados por comuna y porcentaje de participación
datos_comunas1_2021_agrupado <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
#Datos limpios
eleccion_2021_primeravuelta <- datos_comunas1_2021_agrupado
############################ SEGUNDA VUELTA ##################################
# Carga datos de participación Presidencial 2021 segunda vuelta
metropolitana_2021_2 <- read_excel("data/Servel/metropolitana_2021_segundavuelta.xlsx")
datos_comunas2_2021 <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
# Datos agrupados por comuna y porcentaje de participación
datos_comunas2_2021_agrupado <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
#  Datos limpios
eleccion_2021_segundavuelta <- datos_comunas2_2021_agrupado
# Limpieza
# remove(datos2021_1, datos_comunas1_2021, datos_comunas1_2021_agrupado, metropolitana_2021_1, presidencial_2021_1, datos2021_2, datos_comunas2_2021, datos_comunas2_2021_agrupado, metropolitana_2021_2, presidencial_2021_2)
###############################################
################### geolocalización #####################
###############################################
# Primera vuelta
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_primeravuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(Comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(Comuna = str_trim(tolower(Comuna))), by = c("nombre_comuna" = "Comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_primeravuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 1era Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_primeravuelta
# Segunda vuelta
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_segundavuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(Comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(Comuna = str_trim(tolower(Comuna))), by = c("nombre_comuna" = "Comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_segundavuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_segundavuelta
##########################################################
#################### Gráficos Elecciones ##################
############################################################
# Gráfico 2021
grafico_combinado_2021 <- plot_grid(
participacion_2021_primeravuelta + theme(legend.position = "none"),
participacion_2021_segundavuelta + theme(legend.position = "none"),
align = "v",
ncol = 2
)
dir.create("data", showWarnings = FALSE) #DATA
dir.create("data", showWarnings = FALSE) #DATA
dir.create("output", showWarnings = FALSE) # RESULTADOS
dir.create("R", showWarnings = FALSE) # SCRIPT
dir.create("docs", showWarnings = FALSE) # Documentos
readme_content <- "# Análisis CASEN/SERVEL 2021
Análisis de la relación entre participación electoral y condiciones socioeconómicas en Chile.
por motivos de tamaño KB solo fue posible analizar servel y casen 2021
## Estructura del Proyecto
- `data/`: Datos brutos de CASEN y SERVEL
- `output/`: Resultados y visualizaciones
- `R/`: Scripts de análisis
- `docs/`: Documentación adicional
## Equipo
- Ariel Álvarez
- Marcos González
- Arturo Zamorano"
writeLines(readme_content, "README.md")
# Crear los scripts principales de análisis
script_names <- c(
"01_load_data.R",     # Para cargar los datos iniciales
"02_clean_data.R",    # Para limpiar y preparar los datos
"03_analysis.R",      # Para realizar los análisis principales
"04_visualizations.R" # Para crear gráficos y visualizaciones
)
for(script in script_names) {
file.path("R", script) %>%
file.create()
}
# Crear el contenido del script principal que configura el proyecto
load_data_content <- '# Configuración inicial del proyecto
if (!require("renv")) install.packages("renv")
renv::init()
# Instalar y cargar paquetes necesarios
packages <- c(
"tidyverse",  # Para manipulación de datos
"readxl",     # Para leer archivos Excel
"sf",         # Para datos geográficos
"here",       # Para manejo de rutas
"DiagrammeR", # Para diagramas ER
"usethis"     # Para configuración de Git
)
# Instalar paquetes faltantes
new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
# Cargar paquetes
lapply(packages, library, character.only = TRUE)
# Configurar Git
usethis::use_git()
'
writeLines(load_data_content, file.path("R", "01_load_data.R"))
# Crear .gitignore - Este archivo evita que se suban archivos innecesarios a GitHub
gitignore_content <- ".Rproj.user
.Rhistory
.RData
.Ruserdata
*.Rproj"
writeLines(gitignore_content, ".gitignore")
use_git()
library(usethis)
install.packages("usethis")
library(usethis)
edit_git_config()
use_git()
0
f
dir.create("data", showWarnings = FALSE) #DATA
dir.create("output", showWarnings = FALSE) # RESULTADOS
dir.create("R", showWarnings = FALSE) # SCRIPT
dir.create("docs", showWarnings = FALSE) # Documentos
readme_content <- "# Análisis CASEN/SERVEL 2021
Análisis de la relación entre participación electoral y condiciones socioeconómicas en Chile.
por motivos de tamaño KB solo fue posible analizar servel y casen 2021
## Estructura del Proyecto
- `data/`: Datos brutos de CASEN y SERVEL
- `output/`: Resultados y visualizaciones
- `R/`: Scripts de análisis
- `docs/`: Documentación adicional
## Equipo
- Ariel Álvarez
- Marcos González
- Arturo Zamorano"
writeLines(readme_content, "README.md")
# Crear los scripts principales de análisis
script_names <- c(
"01_load_data.R",     # Para cargar los datos iniciales
"02_clean_data.R",    # Para limpiar y preparar los datos
"03_analysis.R",      # Para realizar los análisis principales
"04_visualizations.R" # Para crear gráficos y visualizaciones
)
for(script in script_names) {
file.path("R", script) %>%
file.create()
}
# Crear el contenido del script principal que configura el proyecto
load_data_content <- '# Configuración inicial del proyecto
if (!require("renv")) install.packages("renv")
renv::init()
# Instalar y cargar paquetes necesarios
packages <- c(
"tidyverse",  # Para manipulación de datos
"readxl",     # Para leer archivos Excel
"sf",         # Para datos geográficos
"here",       # Para manejo de rutas
"DiagrammeR", # Para diagramas ER
"usethis"     # Para configuración de Git
)
# Instalar paquetes faltantes
new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
# Cargar paquetes
lapply(packages, library, character.only = TRUE)
# Configurar Git
usethis::use_git()
'
writeLines(load_data_content, file.path("R", "01_load_data.R"))
# Crear .gitignore - Este archivo evita que se suban archivos innecesarios a GitHub
gitignore_content <- ".Rproj.user
.Rhistory
.RData
.Ruserdata
*.Rproj"
writeLines(gitignore_content, ".gitignore")
# Paquetes necesarios para el informe
if(!require(haven)){install.packages("haven")}; library(haven)
if(!require(readxl)){install.packages("readxl")}; library(readxl)
if(!require(dplyr)){install.packages("dplyr")}; library(dplyr)
if(!require(chilemapas)){install.packages("chilemapas")}; library(chilemapas)
if(!require(ggplot2)){install.packages("ggplot2")}; library(ggplot2)
if(!require(stringr)){install.packages("stringr")}; library(stringr)
if(!require(stringi)){install.packages("stringi")}; library(stringi)
if(!require(tools)){install.packages("tools")}; library(tools)
if(!require(gridExtra)){install.packages("gridExtra")}; library(gridExtra)
if(!require(cowplot)){install.packages("cowplot")}; library(cowplot)
# Carga y procesamiento de datos electorales
#############################################
############### Presidencial 2021 ###########
#############################################
# Carga datos de participación Presidencial 2021 primera vuelta
metropolitana_2021_1 <- read_excel("data/Servel/metropolitana_2021_primeravuelta.xlsx")
datos_comunas1_2021 <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
# Datos agrupados por comuna y porcentaje de participación
datos_comunas1_2021_agrupado <- metropolitana_2021_1 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
#Datos limpios
eleccion_2021_primeravuelta <- datos_comunas1_2021_agrupado
############################ SEGUNDA VUELTA ##################################
# Carga datos de participación Presidencial 2021 segunda vuelta
metropolitana_2021_2 <- read_excel("data/Servel/metropolitana_2021_segundavuelta.xlsx")
datos_comunas2_2021 <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna)
# Datos agrupados por comuna y porcentaje de participación
datos_comunas2_2021_agrupado <- metropolitana_2021_2 %>%
select(Distrito, Comuna, Local, Mesa, Inscritos, Votación) %>%
group_by(Distrito, Comuna) %>%
summarize(
Total_Inscritos = sum(as.numeric(Inscritos), na.rm = TRUE),
Total_Votacion = sum(as.numeric(Votación), na.rm = TRUE)
) %>%
mutate(Participacion_Porcentaje = (Total_Votacion / Total_Inscritos) * 100)
#  Datos limpios
eleccion_2021_segundavuelta <- datos_comunas2_2021_agrupado
# Limpieza
# remove(datos2021_1, datos_comunas1_2021, datos_comunas1_2021_agrupado, metropolitana_2021_1, presidencial_2021_1, datos2021_2, datos_comunas2_2021, datos_comunas2_2021_agrupado, metropolitana_2021_2, presidencial_2021_2)
###############################################
################### geolocalización #####################
###############################################
# Primera vuelta
eleccion_2021_primeravuelta <- eleccion_2021_primeravuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_primeravuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(Comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(Comuna = str_trim(tolower(Comuna))), by = c("nombre_comuna" = "Comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_primeravuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 1era Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_primeravuelta
# Segunda vuelta
eleccion_2021_segundavuelta <- eleccion_2021_segundavuelta %>%
mutate(Participacion_Porcentaje = as.numeric(Participacion_Porcentaje))
participacion_comuna <- eleccion_2021_segundavuelta %>%
filter(!is.na(Participacion_Porcentaje) & Participacion_Porcentaje >= 0) %>%
group_by(Comuna) %>%
summarise(participacion_comuna = sum(Participacion_Porcentaje, na.rm = TRUE))
comunas_santiago <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
mutate(nombre_comuna = str_trim(tolower(nombre_comuna))) %>%  # Convertir a minúsculas y quitar espacios
left_join(participacion_comuna %>%
mutate(Comuna = str_trim(tolower(Comuna))), by = c("nombre_comuna" = "Comuna"))
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
participacion_2021_segundavuelta <- ggplot(comunas_santiago) +
geom_sf(aes(fill = participacion_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Porcentaje participación") +
labs(title = "Participación Electoral en 2da Vuelta 2021") +
theme_minimal(base_size = 13)
participacion_2021_segundavuelta
##########################################################
#################### Gráficos Elecciones ##################
############################################################
# Gráfico 2021
grafico_combinado_2021 <- plot_grid(
participacion_2021_primeravuelta + theme(legend.position = "none"),
participacion_2021_segundavuelta + theme(legend.position = "none"),
align = "v",
ncol = 2
)
# Extraer la leyenda de uno de los gráficos
leyenda <- get_legend(participacion_2021_primeravuelta)
# Combinar gráficos y leyenda
plot_grid(grafico_combinado_2021, leyenda, ncol = 1, rel_heights = c(0.81, 0.5))
####################################################
################### CASEN #########################
###################################################
# Etiquetar códigos de comunales de Casen a escritos
comuna_codes_rm <- c(
"13101" = "SANTIAGO",
"13102" = "CERRILLOS",
"13103" = "CERRO NAVIA",
"13104" = "CONCHALI",
"13105" = "EL BOSQUE",
"13106" = "ESTACION CENTRAL",
"13107" = "HUECHURABA",
"13108" = "INDEPENDENCIA",
"13109" = "LA CISTERNA",
"13110" = "LA FLORIDA",
"13111" = "LA GRANJA",
"13112" = "LA PINTANA",
"13113" = "LA REINA",
"13114" = "LAS CONDES",
"13115" = "LO BARNECHEA",
"13116" = "LO ESPEJO",
"13117" = "LO PRADO",
"13118" = "MACUL",
"13119" = "MAIPU",
"13120" = "NUNOA",
"13121" = "PEDRO AGUIRRE CERDA",
"13122" = "PENALOLEN",
"13123" = "PROVIDENCIA",
"13124" = "PUDAHUEL",
"13125" = "QUILICURA",
"13126" = "QUINTA NORMAL",
"13127" = "RECOLETA",
"13128" = "RENCA",
"13129" = "SAN JOAQUIN",
"13130" = "SAN MIGUEL",
"13131" = "SAN RAMON",
"13132" = "VITACURA",
"13201" = "PUENTE ALTO",
"13202" = "PIRQUE",
"13203" = "SAN JOSE DE MAIPO",
"13301" = "COLINA",
"13302" = "LAMPA",
"13303" = "TILTIL",
"13401" = "SAN BERNARDO",
"13402" = "BUIN",
"13403" = "CALERA DE TANGO",
"13404" = "PAINE",
"13501" = "MELIPILLA",
"13502" = "ALHUE",
"13503" = "CURACAVI",
"13504" = "MARIA PINTO",
"13505" = "SAN PEDRO",
"13601" = "TALAGANTE",
"13602" = "EL MONTE",
"13603" = "ISLA DE MAIPO",
"13604" = "PADRE HURTADO",
"13605" = "PENAFLOR"
)
comuna_codes_rm <- tibble::tibble(
comuna = names(comuna_codes_rm),  # Extracción de los códigos de CASEN
nombre_comuna = unname(comuna_codes_rm)  # Nombres
)
# Unión de códigos comunales a nombre
#casen_2013_rm <- casen_2013_rm %>%
#mutate(comuna = as.character(comuna))
#comuna_codes_rm <- comuna_codes_rm %>%
#mutate(comuna = as.character(comuna))
#casen_2013_rm_actualizada <- casen_2013_rm %>% # Nueva base actualizada
# left_join(comuna_codes_rm, by = "comuna") %>% # Unión en base a comunba
#mutate(comuna = nombre_comuna) %>% # Reemplazar el código por el nombre
#select(-nombre_comuna)   # Se elima la columna adicional
#casen_2013_rm_actualizada <- casen_2013_rm_actualizada %>%
#mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) %>% # Valores NA
#mutate(comuna = str_to_lower(comuna))
# Union CASEN 2022 con comunas
#Casen 2022 en sus notas para la investigación comtepla que "no está diseñada para ser representativa a nivel provincial o comunal, por lo que la base principal de Casen ha sido publicada sin incluir las variables de identificación
#  de estas dos unidades territoriales" sin embargo, estas variables se han puesto a disposición de las y los investigadores en una base de datos complementaria porque unimos ambas bases para identificar valores comunales de CASEN.
casen_2021_rm <- read_excel("data/CASEN/casen_2021_rm.xlsx")
casen_comunas_2021 <- read_excel("data/CASEN/casen_comunas_2021.xlsx")
casen_2021_rm_actualizada <- casen_2021_rm %>%
left_join(casen_comunas_2021, by = "folio") #La unión fue mediante el folio de los encuestados
# Etiqueta de comunas por código
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate(comuna = as.character(comuna))
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>% # Nueva base actualizada
left_join(comuna_codes_rm, by = "comuna") %>% # Unión en base a comunba
mutate(comuna = nombre_comuna) %>% # Reemplazar el código por el nombre
select(-nombre_comuna)   # Se elima la columna adicional
casen_2021_rm_actualizada <- casen_2021_rm_actualizada %>%
mutate_all(~ifelse(. %in% c(-88, -99, 97,98,99), NA, .)) %>% # Valores NA
mutate(comuna = str_to_lower(comuna))
# Limpieza CASEN
# remove(casen_2013, casen_2013_rm, casen_2017, casen_2017_rm, casen_2021, casen_2021_rm, casen_comunas_2021, comuna_codes_rm)
### Manipulación CASEN nivel educacional
casen_2013_rm_actualizada <- casen_2013_rm_actualizada %>%
mutate(educ_categoria = case_when(
educ == 0 ~ "Sin educación",
educ %in% 1:2 ~ "Básica",
educ %in% 3:4 ~ "Media",
educ %in% 5:6 ~ "Técnica",
educ %in% 7:8 ~ "Universitaria",
educ > 9 ~ "Superior",
TRUE ~ "Otro"  # Para cualquier valor inesperado
))
participacion_2021_segundavuelta
source("~/Diplomado Data Science/Taller_final/Script.R")
